@import url('https://fonts.googleapis.com/css2?family=Nunito&display=swap');

/* || Applying this attributes to all the other pages */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* || VARIABLES that we can reuse*/

:root {
  /* COLORS */
  --BGCOLOR: #0F172A;
  --BORDER-COLOR: #FFF;
  --COLOR: #FFF;
  --ERROR: firebrick;
  --INACTIVE: lightgray;
  --LINK-COLOR: whitesmoke;
  --LINK-HOVER: rgba(245, 245, 245, 0.9);
  --NOTE-BGCOLOR: hsla(240, 64%, 27%, 0.65);
  --STATUS-COMPLETE: limegreen;
  --STATUS-OPEN: firebrick;
  --TABLE-BGCOLOR: #FFF;
  --TABLE-COLOR: #000;
  --INPUT-INVALID: #F00;
}

/* || UTILITY CLASSES */
/* || padding: 0.25em means that 0.25*font_element (top down left right) */
.errmsg {
  display: inline-block;
  background-color: var(--TABLE-BGCOLOR);
  color: var(--ERROR);
  padding: 0.25em;
  margin-bottom: 0.5em;
}

.errmsg a:any-link {
  color: var(--ERROR);
  text-decoration: underline;
}

.nowrap {
  white-space: nowrap;
}

.icon-button {
  width: 48px;
  height: 48px;
  font-size: 2.5rem;
  background-color: transparent;
  border: none;
  color: var(--COLOR);
  display: grid;
  place-content: center;
}

.icon-button:hover,
.icon-button:focus-visible {
  transform: scale(1.2);
}

.icon-button[disabled] {
  visibility: hidden;
}

/* || GENERAL STYLES */
/* || vh means view height, so it means fill up 100% of the screen with respect to the laptop screen size*/
body {
  font-family: 'Nunito', sans-serif;
  min-height: 100vh;
  background-color: var(--BGCOLOR);
  color: var(--COLOR);
  background-image: url('./img/dash-background.jpg');
  background-size: cover;
  background-position: top right;
  background-blend-mode: multiply;
}

/* || input/button/textarea/select attributes all will use the same font: Nunito */
input,
button,
textarea,
select {
  font: inherit;
}

#root {
  /* React root div */
  /* flex - makes it flexible (responsive) */
  /* flex-flow - column nowrap means that it only vertically stack */
  min-height: 100vh;
  display: flex;
  flex-flow: column nowrap;
}

/*text-decoration: none means it remove the hyperlink*/
a {
  text-decoration: none;
}

/* any-link means that, be it you go the link b4 or never, it will be set to that -link-color */
a:any-link {
  color: var(--LINK-COLOR);
}

a:hover,
a:focus-visible {
  color: var(--LINK-HOVER);
}

/* || PAGES */
/* 1rem equals to root font size */
.public,
.welcome {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.public {
  padding: 1em;
  flex-grow: 1;
}

.public__main,
.login {
  flex-grow: 1;
  border-top: 2px solid var(--BORDER-COLOR);
  border-bottom: 2px solid var(--BORDER-COLOR);
  padding: 1em 0;
}

.public__addr {
  margin-top: 1em;
}

/* before the element welcome is established, the "->" will be written first
.welcome a::before {
  content: "âžœ "
}

/* || DASH HEADER, CONTAINER & FOOTER */
/* position: sticky means that the header will continue follow through as you scrolling */
/* z-index set to above 1 means that your stacking over 0 */
.dash-header {
  position: sticky;
  top: 0;
  z-index: 1;
  background-color: var(--BGCOLOR);
  padding: 0 0.5em;
  border-bottom: 1px solid var(--BORDER-COLOR);
}

/* flex-flow: row nowrap (ensures that it will be horizontal and even if it dont have any space, it dun care) 
justify-content to split equal space between 
*/
.dash-header__container {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
}

.dash-header__container--small {
  max-width: 800px;
}

.dash-header__nav {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-end;
  gap: 0.5em;
}

/* 0.75em (top), 0.5em (right and left), 0.5em (bottom) 
flex-grow: 1 (which means that it will grow to fill any available space in the flex container).
*/ 
.dash-container {
  padding: 0.75em 0.5em 0.5em;
  flex-grow: 1;
}

.dash-footer {
  font-size: 1rem;
  position: sticky;
  bottom: 0;
  z-index: 1;
  background-color: var(--BGCOLOR);
  padding: 0.5em;
  border-top: 1px solid var(--BORDER-COLOR);
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  gap: 1em;
}

/* the size of the button will change along with the content */
.dash-footer__button {
  font-size: 1rem;
  width: auto;
  height: auto;
}

/* || TABLES - GENERAL 
display: contents (makes the content disappear)
*/

thead,
tbody,
tr {
  display: contents;
}

/*
display: grid (Just make all things align with each other tgt in a container)
grid-template-columns: there is three columns becuz 1fr 2fr 1fr
first column takes up 1/4 of the fraction 2/4 of the fraction and 1/4 of the fraction
*/
.table {
  font-size: 1rem;
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  color: var(--TABLE-COLOR);
  gap: 0.1em;
}

.table__button {
  padding: 0.25em;
  font-size: 1.5rem;
  color: var(--TABLE-COLOR);
}

.table__thead {
  position: sticky;
  top: 0;
  z-index: 1;
}

.table__th,
.table__cell {
  background-color: var(--TABLE-BGCOLOR);
  text-align: left;
  border: 1px solid var(--TABLE-COLOR);
  padding: 0.5em;
}

.table__cell:last-child {
  display: grid;
  place-content: center;
}

.table__cell--inactive {
  background-color: var(--INACTIVE);
}

/* ||  NOTE */

.note__created,
.note__updated,
.note__username {
  display: none;
}

.note__status {
  font-weight: bold;
}

.note__status--open {
  color: var(--STATUS-OPEN);
}

.note__status--completed {
  color: var(--STATUS-COMPLETE);
}


/* || FORM - GENERAL */

.form {
  display: flex;
  flex-flow: column nowrap;
  gap: 0.75em;
  max-width: 800px;
}

.form__checkbox-container {
  display: flex;
  align-items: center;
  width: fit-content;
  gap: 0.5em;
}

.form__persist {
  display: flex;
  align-items: center;
  width: 100%;
  gap: 0.5em;
}

.form__title-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.form__input,
.form__submit-button {
  padding: 0.5em;
  border-radius: 15px;
}

/* this allow the textarea to have a height of 150pixel */
.form__input--text {
  min-height: 150px;
}

.form__input--incomplete {
  border: 1px solid var(--INPUT-INVALID);
  outline: 1px solid var(--INPUT-INVALID);
}

.form__checkbox {
  width: 24px;
  height: 24px;
}

.form__select {
  width: fit-content;
  padding: 0.25em;
}
/* align-items: center (ensures that the <div> is all at the center of the <div> ) 
position: absolute (means it follow its closest positioned ancestor (parent element))
*/
.form__action-buttons {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.5em;
  position: absolute;
  right: 0.5em;
}

.form__row {
  display: flex;
  flex-flow: row nowrap;
  gap: 2em;
}

.form__divider {
  display: flex;
  flex-flow: column nowrap;
  gap: 0.5em;
}

/* this means that if screen is less than 400 pixel, we need to make h1 font size bigger (2em) = 32 pixels
so becuz screen is smaller, we dont incur space in between, make it tighter is better thus gap: 0
make icon-button smaller abit 
*/
@media screen and (max-width: 400px) {
  h1 {
    font-size: 2rem;
  }

  .dash-header__nav {
    gap: 0;
  }

  .icon-button {
    font-size: 1.5rem;
  }
}


@media screen and (min-width: 768px) {

  body {
    font-size: 1.25rem;
  }

  .dash-header {
    padding: 0 1em;
  }

  .dash-container {
    padding: 1em;
  }

  .table {
    font-size: 1.5rem;
  }

  /* repeat(3, 1fr) - means three columns will equal width (1/3)
  fourth column is 2/3 of the total width, fifth/sixth column (1/3)
  */
  .table--notes {
    grid-template-columns: repeat(3, 1fr) 2fr repeat(2, 1fr);
  }

  /* even if the screen is big we will still populate the data line by line */
  .note__created,
  .note__updated,
  .note__username {
    display: block
  }

  .form__action-buttons {
    position: static;
  }
}